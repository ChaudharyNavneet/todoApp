{"ast":null,"code":"var _jsxFileName = \"/Users/navneet.chaudhary/Desktop/To-Do App/FE/src/components/AddTodo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo } from \"../redux/actions/todoActions\";\nimport \"./AddTodo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTodo = () => {\n  _s();\n  const dispatch = useDispatch();\n  const userId = useSelector(state => {\n    var _state$auth;\n    return (state === null || state === void 0 ? void 0 : (_state$auth = state.auth) === null || _state$auth === void 0 ? void 0 : _state$auth._id) || \"\";\n  });\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [completed, setEditCompleted] = useState(false);\n  const loggedIn = useSelector(state => {\n    var _state$auth2;\n    return (state === null || state === void 0 ? void 0 : (_state$auth2 = state.auth) === null || _state$auth2 === void 0 ? void 0 : _state$auth2.loggedIn) || false;\n  });\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(addTodo({\n      userId,\n      title,\n      completed,\n      description\n    }));\n    setTitle(\"\");\n    setDescription(\"\");\n  };\n  const todoForm = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"add-todo-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-todo-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        className: \"add-todo-label\",\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true,\n        className: \"add-todo-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-todo-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        className: \"add-todo-label\",\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true,\n        className: \"add-todo-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-todo-input-container\",\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"completed\",\n        className: \"add-todo-label\",\n        children: \"Completed:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"completed\",\n        checked: completed,\n        onChange: event => setEditCompleted(event.target.checked),\n        className: \"add-todo-input-checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"add-todo-button\",\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n  return loggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-todo-title\",\n      onClick: () => setShowForm(!showForm),\n      children: [\" \", showForm ? 'Cancel Add' : 'Add New Todo']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), showForm && todoForm]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n};\n_s(AddTodo, \"/0lz1q1rZ/iJucM7nWMj2W7U9vo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = AddTodo;\nexport default AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","addTodo","jsxDEV","_jsxDEV","AddTodo","_s","dispatch","userId","state","_state$auth","auth","_id","title","setTitle","description","setDescription","showForm","setShowForm","completed","setEditCompleted","loggedIn","_state$auth2","handleSubmit","event","preventDefault","todoForm","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","target","required","style","display","flexDirection","checked","onClick","_c","$RefreshReg$"],"sources":["/Users/navneet.chaudhary/Desktop/To-Do App/FE/src/components/AddTodo.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo } from \"../redux/actions/todoActions\";\nimport \"./AddTodo.css\"\n\nconst AddTodo = () => {\n  const dispatch = useDispatch();\n  const userId = useSelector((state) => state?.auth?._id || \"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [showForm, setShowForm] = useState(false)\n  const [completed, setEditCompleted] = useState(false);\n  const loggedIn = useSelector((state) => state?.auth?.loggedIn || false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(addTodo({ userId, title, completed, description }));\n    setTitle(\"\");\n    setDescription(\"\");\n  };\n  const todoForm = (\n    <form onSubmit={handleSubmit} className=\"add-todo-form\">\n      <div className=\"add-todo-input-container\">\n        <label htmlFor=\"title\" className=\"add-todo-label\">Title:</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          required\n          className=\"add-todo-input\"\n        />\n      </div>\n      <div className=\"add-todo-input-container\">\n        <label htmlFor=\"description\" className=\"add-todo-label\">Description:</label>\n        <textarea\n          id=\"description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          required\n          className=\"add-todo-input\"\n        ></textarea>\n      </div>\n      <div className=\"add-todo-input-container\" style={{display: 'flex', flexDirection: 'row'}}>\n        <label htmlFor=\"completed\" className=\"add-todo-label\">Completed:</label>\n        <input\n          type=\"checkbox\"\n          id=\"completed\"\n          checked={completed}\n          onChange={(event) => setEditCompleted(event.target.checked)}\n          className=\"add-todo-input-checkbox\"\n        />\n      </div>\n      <button type=\"submit\" className=\"add-todo-button\">Add Todo</button>\n    </form>\n  )\n\n  return (\n    loggedIn && (\n      <div className=\"add-todo-container\">\n        <button className=\"add-todo-title\" onClick={() => setShowForm(!showForm)}> {showForm? 'Cancel Add' : 'Add New Todo' }</button>\n        {showForm && todoForm}\n      </div>\n    )\n  );\n};\n\nexport default AddTodo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}