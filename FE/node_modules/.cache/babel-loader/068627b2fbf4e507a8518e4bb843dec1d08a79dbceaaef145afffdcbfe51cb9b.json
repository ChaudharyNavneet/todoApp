{"ast":null,"code":"export const fetchTodos = userId => {\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    userId: userId\n  };\n  return dispatch => {\n    dispatch({\n      type: \"FETCH_TODO_LIST_PENDING\"\n    });\n    fetch(`http://localhost:4000/todos/${userId}`, options).then(response => response.json()).then(data => {\n      dispatch({\n        type: \"FETCH_TODO_LIST_SUCCESS\",\n        payload: data\n      });\n    }).catch(error => {\n      dispatch({\n        type: \"FETCH_TODO_LIST_FAILURE\",\n        payload: error.message\n      });\n    });\n  };\n};\nexport const addTodo = todo => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(todo)\n  };\n  return dispatch => {\n    dispatch({\n      type: \"ADD_TODO_PENDING\"\n    });\n    fetch(`http://localhost:4000/addTodo`, options).then(response => response.json()).then(data => {\n      dispatch(fetchTodos(todo.userId));\n      dispatch({\n        type: \"ADD_TODO_SUCCESS\",\n        payload: todo\n      });\n    }).catch(error => {\n      dispatch({\n        type: \"ADD_TODO_FAILURE\",\n        payload: error.message\n      });\n    });\n  };\n};\nexport const deleteTodo = (todoId, userId) => {\n  const options = {\n    method: \"DELETE\"\n  };\n  return dispatch => {\n    dispatch({\n      type: \"DELETE_TODO_PENDING\"\n    });\n    fetch(`http://localhost:4000/deleteTodo/${todoId}`, options).then(response => response.json()).then(() => {\n      dispatch(fetchTodos(userId));\n      const userData = {\n        username: \"jdoe\",\n        email: \"jdoe@example.com\"\n      };\n      localStorage.setItem(\"userData\", JSON.stringify(userData));\n      dispatch({\n        type: \"DELETE_TODO_SUCCESS\",\n        payload: todoId\n      });\n    }).catch(error => {\n      dispatch({\n        type: \"DELETE_TODO_FAILURE\",\n        payload: error.message\n      });\n    });\n  };\n};\nexport const editTodo = (todoId, updatedTodo) => {\n  const options = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(updatedTodo)\n  };\n  return dispatch => {\n    dispatch({\n      type: \"EDIT_TODO_PENDING\"\n    });\n    fetch(`http://localhost:4000/editTodo/${todoId}`, options).then(response => response.json()).then(data => {\n      // dispatch(fetchTodos(updatedTodo.userId));\n      dispatch({\n        type: \"EDIT_TODO_SUCCESS\",\n        payload: {\n          todoId: todoId,\n          updatedTodo: updatedTodo\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: \"EDIT_TODO_FAILURE\",\n        payload: error.message\n      });\n    });\n  };\n};","map":{"version":3,"names":["fetchTodos","userId","options","method","headers","dispatch","type","fetch","then","response","json","data","payload","catch","error","message","addTodo","todo","body","JSON","stringify","deleteTodo","todoId","userData","username","email","localStorage","setItem","editTodo","updatedTodo"],"sources":["/Users/navneet.chaudhary/Desktop/To-Do App/FE/src/redux/actions/todoActions.js"],"sourcesContent":["export const fetchTodos = (userId) => {\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    userId: userId,\n  };\n  return (dispatch) => {\n    dispatch({ type: \"FETCH_TODO_LIST_PENDING\" });\n    fetch(`http://localhost:4000/todos/${userId}`, options)\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({ type: \"FETCH_TODO_LIST_SUCCESS\", payload: data });\n      })\n      .catch((error) => {\n        dispatch({ type: \"FETCH_TODO_LIST_FAILURE\", payload: error.message });\n      });\n  };\n};\n\nexport const addTodo = (todo) => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(todo),\n  };\n  return (dispatch) => {\n    dispatch({ type: \"ADD_TODO_PENDING\" });\n    fetch(`http://localhost:4000/addTodo`, options)\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch(fetchTodos(todo.userId));\n        dispatch({\n          type: \"ADD_TODO_SUCCESS\",\n          payload: todo,\n        });\n      })\n      .catch((error) => {\n        dispatch({ type: \"ADD_TODO_FAILURE\", payload: error.message });\n      });\n  };\n};\n\nexport const deleteTodo = (todoId, userId) => {\n  const options = {\n    method: \"DELETE\",\n  };\n  return (dispatch) => {\n    dispatch({ type: \"DELETE_TODO_PENDING\" });\n    fetch(`http://localhost:4000/deleteTodo/${todoId}`, options)\n      .then((response) => response.json())\n      .then(() => {\n        dispatch(fetchTodos(userId));\n        const userData = { username: \"jdoe\", email: \"jdoe@example.com\" };\n        localStorage.setItem(\"userData\", JSON.stringify(userData));\n        dispatch({ type: \"DELETE_TODO_SUCCESS\", payload: todoId });\n      })\n      .catch((error) => {\n        dispatch({ type: \"DELETE_TODO_FAILURE\", payload: error.message });\n      });\n  };\n};\n\nexport const editTodo = (todoId, updatedTodo) => {\n  const options = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(updatedTodo),\n  };\n  return (dispatch) => {\n    dispatch({ type: \"EDIT_TODO_PENDING\" });\n    fetch(`http://localhost:4000/editTodo/${todoId}`, options)\n      .then((response) => response.json())\n      .then((data) => {\n        // dispatch(fetchTodos(updatedTodo.userId));\n        dispatch({\n          type: \"EDIT_TODO_SUCCESS\",\n          payload: { todoId: todoId, updatedTodo: updatedTodo },\n        });\n      })\n      .catch((error) => {\n        dispatch({ type: \"EDIT_TODO_FAILURE\", payload: error.message });\n      });\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}