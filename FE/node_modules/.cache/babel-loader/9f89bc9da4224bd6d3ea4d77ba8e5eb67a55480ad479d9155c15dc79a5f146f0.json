{"ast":null,"code":"export const fetchTodos = userId => {\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: json.stringify({\n      userId: userId\n    })\n  };\n  return dispatch => {\n    dispatch({\n      type: \"FETCH_TODO_LIST_PENDING\"\n    });\n    fetch(`http://localhost:4000/todos`, options).then(response => response.json()).then(data => {\n      dispatch({\n        type: \"FETCH_TODO_LIST_SUCCESS\",\n        payload: data\n      });\n      console.log(data);\n    }).catch(error => {\n      dispatch({\n        type: \"FETCH_TODO_LIST_FAILURE\",\n        payload: error.message\n      });\n    });\n  };\n};\nexport const addTodo = todo => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(todo)\n  };\n  return dispatch => {\n    dispatch({\n      type: \"ADD_TODO_PENDING\"\n    });\n    fetch(`http://localhost:4000/addTodo`, options).then(response => response.json()).then(data => {\n      dispatch({\n        type: \"ADD_TODO_SUCCESS\",\n        payload: {\n          data: data,\n          _id: todo._id\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: \"ADD_TODO_FAILURE\",\n        payload: error.message\n      });\n    });\n  };\n};\nexport const deleteTodo = todoId => {\n  const options = {\n    method: \"DELETE\"\n  };\n  return dispatch => {\n    dispatch({\n      type: \"DELETE_TODO_PENDING\"\n    });\n    fetch(`http://localhost:4000/deleteTodo/${todoId}`, options).then(response => response.json()).then(() => {\n      dispatch({\n        type: \"DELETE_TODO_SUCCESS\",\n        payload: todoId\n      });\n    }).catch(error => {\n      dispatch({\n        type: \"DELETE_TODO_FAILURE\",\n        payload: error.message\n      });\n    });\n  };\n};\nexport const editTodo = (todoId, updatedTodo) => {\n  const options = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(updatedTodo)\n  };\n  return dispatch => {\n    dispatch({\n      type: \"EDIT_TODO_PENDING\"\n    });\n    fetch(`http://localhost:4000/editTodo/${todoId}`, options).then(response => response.json()).then(data => {\n      dispatch({\n        type: \"EDIT_TODO_SUCCESS\",\n        payload: {\n          data: data,\n          _id: todoId\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: \"EDIT_TODO_FAILURE\",\n        payload: error.message\n      });\n    });\n  };\n};","map":{"version":3,"names":["fetchTodos","userId","options","method","headers","body","json","stringify","dispatch","type","fetch","then","response","data","payload","console","log","catch","error","message","addTodo","todo","JSON","_id","deleteTodo","todoId","editTodo","updatedTodo"],"sources":["/Users/navneet.chaudhary/Desktop/To-Do App/FE/src/redux/actions/todoActions.js"],"sourcesContent":["export const fetchTodos = (userId) => {\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body :json.stringify({userId: userId}),\n  };\n  return (dispatch) => {\n    dispatch({ type: \"FETCH_TODO_LIST_PENDING\" });\n    fetch(`http://localhost:4000/todos`, options)\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({ type: \"FETCH_TODO_LIST_SUCCESS\", payload: data });\n        console.log(data);\n      })\n      .catch((error) => {\n        dispatch({ type: \"FETCH_TODO_LIST_FAILURE\", payload: error.message });\n      });\n  };\n};\n\nexport const addTodo = (todo) => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(todo),\n  };\n  return (dispatch) => {\n    dispatch({ type: \"ADD_TODO_PENDING\" });\n    fetch(`http://localhost:4000/addTodo`, options)\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: \"ADD_TODO_SUCCESS\",\n          payload: { data: data, _id: todo._id },\n        });\n      })\n      .catch((error) => {\n        dispatch({ type: \"ADD_TODO_FAILURE\", payload: error.message });\n      });\n  };\n};\n\nexport const deleteTodo = (todoId) => {\n  const options = {\n    method: \"DELETE\",\n  };\n  return (dispatch) => {\n    dispatch({ type: \"DELETE_TODO_PENDING\" });\n    fetch(`http://localhost:4000/deleteTodo/${todoId}`, options)\n      .then((response) => response.json())\n      .then(() => {\n        dispatch({ type: \"DELETE_TODO_SUCCESS\", payload: todoId });\n      })\n      .catch((error) => {\n        dispatch({ type: \"DELETE_TODO_FAILURE\", payload: error.message });\n      });\n  };\n};\n\nexport const editTodo = (todoId, updatedTodo) => {\n  const options = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(updatedTodo),\n  };\n  return (dispatch) => {\n    dispatch({ type: \"EDIT_TODO_PENDING\" });\n    fetch(`http://localhost:4000/editTodo/${todoId}`, options)\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: \"EDIT_TODO_SUCCESS\",\n          payload: { data: data, _id: todoId },\n        });\n      })\n      .catch((error) => {\n        dispatch({ type: \"EDIT_TODO_FAILURE\", payload: error.message });\n      });\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}