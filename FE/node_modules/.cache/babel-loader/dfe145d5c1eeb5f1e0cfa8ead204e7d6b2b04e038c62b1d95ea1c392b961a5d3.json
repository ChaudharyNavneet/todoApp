{"ast":null,"code":"export const fetchTodos = userId => {\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return dispatch => {\n    dispatch({\n      type: \"FETCH_TODO_LIST_PENDING\"\n    });\n    fetch(`http://localhost:4000/todos${userId}`, options).then(response => response.json()).then(data => {\n      dispatch({\n        type: \"FETCH_TODO_LIST_SUCCESS\",\n        payload: data\n      });\n    }).catch(error => {\n      dispatch({\n        type: \"FETCH_TODO_LIST_FAILURE\",\n        payload: error.message\n      });\n    });\n  };\n};","map":{"version":3,"names":["fetchTodos","userId","options","method","headers","dispatch","type","fetch","then","response","json","data","payload","catch","error","message"],"sources":["/Users/navneet.chaudhary/Desktop/To-Do App/FE/src/redux/actions/todoActions.js"],"sourcesContent":["export const fetchTodos = (userId) => {\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return (dispatch) => {\n    dispatch({ type: \"FETCH_TODO_LIST_PENDING\" });\n    fetch(`http://localhost:4000/todos${userId}`, options)\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({ type: \"FETCH_TODO_LIST_SUCCESS\", payload: data });\n      })\n      .catch((error) => {\n        dispatch({ type: \"FETCH_TODO_LIST_FAILURE\", payload: error.message });\n      });\n  };\n};\n"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,MAAM,IAAK;EACpC,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EACD,OAAQC,QAAQ,IAAK;IACnBA,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAA0B,CAAC,CAAC;IAC7CC,KAAK,CAAE,8BAA6BN,MAAO,EAAC,EAAEC,OAAO,CAAC,CACnDM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdN,QAAQ,CAAC;QAAEC,IAAI,EAAE,yBAAyB;QAAEM,OAAO,EAAED;MAAK,CAAC,CAAC;IAC9D,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;MAChBT,QAAQ,CAAC;QAAEC,IAAI,EAAE,yBAAyB;QAAEM,OAAO,EAAEE,KAAK,CAACC;MAAQ,CAAC,CAAC;IACvE,CAAC,CAAC;EACN,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}